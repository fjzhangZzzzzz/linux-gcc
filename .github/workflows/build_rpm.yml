name: Build RPM pakcage

on:
  workflow_dispatch:
    inputs:
      arch:
        description: 'Architecture to build rpm, one of amd64,arm64v8,ppc64le'
        default: 'amd64'
        required: true
      item:
        description: 'Package to build rpm, one of binutils,gcc,gdb'
        default: 'binutils'
        required: true
env:
  TAG_NAME: ''
  
jobs:
  build_and_publish:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repo
      uses: actions/checkout@v3

    - name: Build rpm
      run: |
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        docker run --rm -v$(pwd):/root/build_rpm ${{ github.event.inputs.arch }}/centos:7 bash /root/build_rpm/build_rpm.sh ${{ github.event.inputs.item }}
        tar -zcvf ${{ github.event.inputs.item }}-${{ github.event.inputs.arch }}-rpm.tar.gz RPMS/
        TAG_NAME=${{ github.event.inputs.item }}-${{ github.event.inputs.arch }}-$(date "+%y%m%d")
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        release_name: Release ${{ github.event.inputs.item }}-${{ github.event.inputs.arch }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./${{ github.event.inputs.item }}-${{ github.event.inputs.arch }}-rpm.tar.gz
        asset_name: ${{ github.event.inputs.item }}-${{ github.event.inputs.arch }}-rpm.tar.gz
